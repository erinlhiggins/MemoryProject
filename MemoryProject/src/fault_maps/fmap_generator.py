## @file
# Automatically creates a c++ header file (AUTOGEN_FMAP.h) for FaultMaps
# @author Donald Kline, Jr

import os

headerlist = [];
namelist= [];
for filename in os.listdir('.'):
	if (filename.endswith('.h') and
		filename!='AUTOGEN_FMAP.h'):
		headerlist.append(filename)
		namelist.append(filename[:-2])

my_file = open("AUTOGEN_FMAP.h", "w")

#STEP 1: Write header
doc_open = ("/**\n"
			"@file\n"
			"@brief autogenerated file using all headers\n"
			"@warning AUTOGENERATED FILE! All changes will be overwritten!\n"
			"@author Donald Kline, Jr\n"
			"*/\n"
			"#ifndef _PRES_SIMULATOR_AUTOGENERATED_FAULT_MAP_HEADER_H__\n"
			"#define _PRES_SIMULATOR_AUTOGENERATED_FAULT_MAP_HEADER_H__\n"
			)
my_file.write(doc_open)

#STEP 2: Write includes
my_file.write("\n\n#include \"../utils/PresSubConfig.h\"\n")
my_file.write("#include \"../utils/FaultMap.h\"\n")
for header in headerlist:
	my_file.write("#include \""+header+"\"\n")

my_file.write("\nnamespace PresSim {\n\n")
#STEP 3: Write function
doc_fcn =  ("\n\n/**\n"
			"@fn PRES_FACTORY_create_fault_map(const PresSubConfig& psc)\n"
			"@brief Autogenerated function to automatically import and use new fault maps\n"
			"@warning AUTOGENERATED FUNCTION! All changes will be overwritten\n"
			"*/\n"
			)
my_file.write(doc_fcn)
my_file.write("unique_ptr<FaultMap> PRES_FACTORY_create_fault_map(const PresSubConfig& psc)\n")
my_file.write("{\n")

for name in namelist:
	condition = ("\tif (psc.get_name()==\""+name+"\") {\n"
				 "\t\tstd::unique_ptr<FaultMap> csPtr(new "+name+"(psc));\n"
				 "\t\treturn csPtr;\n"
				)
	my_file.write(condition)
	my_file.write("\t}\n")

condition = ("\tif (psc.get_name()==NULL_STR_PRES) {\n"
             "\t\tstd::unique_ptr<FaultMap> csPtr(new EmptyFMap(psc));\n"
             "\t\treturn csPtr;\n"
            )
my_file.write(condition)
my_file.write("\t}\n")

my_file.write("\tPRES_ERROR(\"Invalid FaultMap: \"+psc.get_name());\n")
my_file.write("\tabort();\n")
my_file.write("}\n\n")
my_file.write("}\n\n")




my_file.write("#endif\n")
my_file.close()
		

